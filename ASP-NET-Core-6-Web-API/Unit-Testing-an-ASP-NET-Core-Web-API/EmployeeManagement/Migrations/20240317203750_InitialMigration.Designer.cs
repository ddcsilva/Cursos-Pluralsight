// <auto-generated />
using System;
using EmployeeManagement.DataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(FuncionarioDbContext))]
    [Migration("20240317203750_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("CursoFuncionarioInterno", b =>
                {
                    b.Property<Guid>("CursosParticipadosId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FuncionariosQueParticiparamId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursosParticipadosId", "FuncionariosQueParticiparamId");

                    b.HasIndex("FuncionariosQueParticiparamId");

                    b.ToTable("FuncionarioInternoCurso", (string)null);

                    b.HasData(
                        new
                        {
                            CursosParticipadosId = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            FuncionariosQueParticiparamId = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb")
                        },
                        new
                        {
                            CursosParticipadosId = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            FuncionariosQueParticiparamId = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb")
                        },
                        new
                        {
                            CursosParticipadosId = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            FuncionariosQueParticiparamId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        },
                        new
                        {
                            CursosParticipadosId = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            FuncionariosQueParticiparamId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        },
                        new
                        {
                            CursosParticipadosId = new Guid("844e14ce-c055-49e9-9610-855669c9859b"),
                            FuncionariosQueParticiparamId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        });
                });

            modelBuilder.Entity("EmployeeManagement.DataAccess.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EhNovo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            EhNovo = false,
                            Title = "Introdução à Empresa"
                        },
                        new
                        {
                            Id = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            EhNovo = false,
                            Title = "Respeitando Seus Colegas"
                        },
                        new
                        {
                            Id = new Guid("844e14ce-c055-49e9-9610-855669c9859b"),
                            EhNovo = false,
                            Title = "Atendimento ao Cliente 101"
                        },
                        new
                        {
                            Id = new Guid("d6e0e4b7-9365-4332-9b29-bb7bf09664a6"),
                            EhNovo = false,
                            Title = "Atendimento ao Cliente - Avançado"
                        },
                        new
                        {
                            Id = new Guid("cbf6db3b-c4ee-46aa-9457-5fa8aefef33a"),
                            EhNovo = false,
                            Title = "Gestão de Desastres 101"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.DataAccess.Entities.FuncionarioExterno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExternalEmployees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb"),
                            Empresa = "Tecnologia para Todos, Inc",
                            PrimeiroNome = "Amanda",
                            Sobrenome = "Smith"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.DataAccess.Entities.FuncionarioInterno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AnosDeServico")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AumentoMinimoConcedido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelCargo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("InternalEmployees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb"),
                            AnosDeServico = 2,
                            AumentoMinimoConcedido = false,
                            NivelCargo = 2,
                            PrimeiroNome = "Megan",
                            Salario = 3000m,
                            Sobrenome = "Jones"
                        },
                        new
                        {
                            Id = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f"),
                            AnosDeServico = 3,
                            AumentoMinimoConcedido = true,
                            NivelCargo = 1,
                            PrimeiroNome = "Jaimy",
                            Salario = 3400m,
                            Sobrenome = "Johnson"
                        });
                });

            modelBuilder.Entity("CursoFuncionarioInterno", b =>
                {
                    b.HasOne("EmployeeManagement.DataAccess.Entities.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosParticipadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.DataAccess.Entities.FuncionarioInterno", null)
                        .WithMany()
                        .HasForeignKey("FuncionariosQueParticiparamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
